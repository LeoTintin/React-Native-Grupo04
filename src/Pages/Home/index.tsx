import React, { useState } from "react";
import { View, Text, ScrollView, TouchableOpacity, Linking } from "react-native";
import { styles } from "./style";

export function Home() {
  const [expandedNoticeIds, setExpandedNoticeIds] = useState<number[]>([]);
  const [expandedEventIds, setExpandedEventIds] = useState<number[]>([]);

  const toggleNotice = (id: number) => {
    setExpandedNoticeIds((prevIds) =>
      prevIds.includes(id) ? prevIds.filter((noticeId) => noticeId !== id) : [...prevIds, id]
    );
  };

  const toggleEvent = (id: number) => {
    setExpandedEventIds((prevIds) =>
      prevIds.includes(id) ? prevIds.filter((eventId) => eventId !== id) : [...prevIds, id]
    );
  };

  const importantNotices = [
    {
      id: 1,
      title: "Boa tarde, pessoal!",
      content: "Parab√©ns pela conclus√£o da disciplina Desenvolvimento de API Restfu!ü•≥\n\nAo final de cada disciplina voc√™s DEVER√ÉO (N√ÉO √â OPCIONAL) preencher um formul√°rio de avalia√ß√£o sobre a disciplina, as demais atividades (ingl√™s, mentoria, etc) e a Resid√™ncia em TIC/Software de maneira geral.\n\n√â muito importante que voc√™s preencham o formul√°rio com sinceridade, pois a opini√£o de cada um de voc√™s √© determinante para a qualidade do curso e ajustes de percurso!\n\nO formul√°rio estar√° aberto at√© 31/05",
    },
    {
      id: 2,
      title: "Boa tarde, pessoal!",
      content: "Parab√©ns pela conclus√£o da disciplina Desenvolvimento WEB!ü•≥\n\n√â importante que voc√™s preencham o formul√°rio com sinceridade, pois a opini√£o de cada um de voc√™s √© determinante para a qualidade do curso e ajustes de percurso!\n\nO formul√°rio estar√° aberto at√© 13/06\n\nLink: https://forms.gle/HxRETWYWXYuKaP1f6\n\nDesde j√° agradecemos pela sua participa√ß√£o!",
    },
    // Adicione mais avisos conforme necess√°rio
  ];

  const onlineClasses = [
    { id: 1, subject: "React Native", link: "https://meet.google.com/abc-defg-hij" },
    { id: 2, subject: "Banco de Dados", link: "https://meet.google.com/klm-nopq-rst" },
    // Adicione mais links conforme necess√°rio
  ];

  const upcomingEvents = [
    {
      id: 1,
      title: "Reuni√£o sobre Projeto Aplicado",
      date: "S√°bado, 22/06",
      description: "Residentes, bom dia!\n\nNo pr√≥ximo s√°bado (22/06), teremos nossa reuni√£o de apresenta√ß√£o sobre o Projeto Aplicado. Esse encontro √© muito importante para que voc√™s saibam como desenvolver, da melhor forma poss√≠vel, o trabalho final da resid√™ncia, que ter√£o as atua√ß√µes direta dos Residentes Agilistas e das Empresas Parceiras.",
      link: "https://bit.ly/palestra20240622",
    },
    // Adicione mais eventos conforme necess√°rio
  ];

  return (
    <ScrollView style={styles.container}>
      <View style={styles.noticeContainer}>
        <Text style={styles.noticeHeader}>Avisos Importantes</Text>
        {importantNotices.map((notice) => (
          <TouchableOpacity key={notice.id} style={styles.notice} onPress={() => toggleNotice(notice.id)}>
            <Text style={styles.noticeTitle}>{notice.title}</Text>
            <Text
              style={expandedNoticeIds.includes(notice.id) ? styles.noticeContentExpanded : styles.noticeContent}
              numberOfLines={expandedNoticeIds.includes(notice.id) ? undefined : 3}
            >
              {notice.content}
            </Text>
            {!expandedNoticeIds.includes(notice.id) && (
              <Text style={styles.readMore}>Leia mais</Text>
            )}
          </TouchableOpacity>
        ))}
      </View>
      <View style={styles.classesContainer}>
        <Text style={styles.classesHeader}>Aulas Online</Text>
        {onlineClasses.map((classInfo) => (
          <TouchableOpacity
            key={classInfo.id}
            style={styles.classLink}
            onPress={() => Linking.openURL(classInfo.link)}
          >
            <Text style={styles.classSubject}>{classInfo.subject}</Text>
            <Text style={styles.classLinkText}>{classInfo.link}</Text>
          </TouchableOpacity>
        ))}
      </View>
      <View style={styles.eventsContainer}>
        <Text style={styles.eventsHeader}>Pr√≥ximos Eventos</Text>
        {upcomingEvents.map((event) => (
          <TouchableOpacity key={event.id} style={styles.event} onPress={() => toggleEvent(event.id)}>
            <Text style={styles.eventTitle}>{event.title}</Text>
            <Text
              style={expandedEventIds.includes(event.id) ? styles.eventDescriptionExpanded : styles.eventDescription}
              numberOfLines={expandedEventIds.includes(event.id) ? undefined : 3}
            >
              {event.description}
            </Text>
            {!expandedEventIds.includes(event.id) && (
              <Text style={styles.readMore}>Leia mais</Text>
            )}
            <TouchableOpacity onPress={() => Linking.openURL(event.link)}>
              <Text style={styles.eventLink}>Inscri√ß√µes: {event.link}</Text>
            </TouchableOpacity>
          </TouchableOpacity>
        ))}
      </View>
    </ScrollView>
  );
}
